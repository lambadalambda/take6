name: Test Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run type-check
        
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        
      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Build application
        run: npm run build
        
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request' && matrix.node-version == '20.x'
        with:
          script: |
            const output = `### üß™ Test Results (Node ${{ matrix.node-version }})
            
            | Check | Status |
            |-------|--------|
            | Linting | ${{ steps.lint.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | Type Check | ${{ steps.typecheck.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | Tests | ${{ steps.test.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | Build | ${{ steps.build.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            
            [View Full Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })